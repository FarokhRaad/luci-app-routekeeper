#!/bin/sh /etc/rc.common

# RouteKeeper Init Script â€” Smart Gateway Selection via HTTP Latency

START=90
STOP=10
USE_PROCD=1

PROG="/usr/libexec/rpcd/routekeeper/rpc_handler.lua"
TEST_URL="http://www.gstatic.com/generate_204"

# ------------------------------------------------------------------------------------------------
# Function: Run curl tests and select interface with lowest HTTP latency
# ------------------------------------------------------------------------------------------------
select_best_gateway() {
    logger -t routekeeper "Selecting best default interface based on HTTP latency..."

    retries=5
    delay=2

    interfaces_raw=$(ubus call luci.routekeeper get_interfaces 2>/dev/null)
    [ $? -ne 0 ] && logger -t routekeeper "Failed to get interfaces from ubus" && return

    while [ "$retries" -gt 0 ]; do
        interfaces=$(echo "$interfaces_raw" | jsonfilter -e "@.interfaces[*]" | tr -d '"' | grep -v '^wan$')
        [ -n "$interfaces" ] && break
        logger -t routekeeper "Waiting for interfaces to become ready..."
        sleep "$delay"
        retries=$((retries - 1))
    done

    if [ -z "$interfaces" ]; then
        logger -t routekeeper "No usable interfaces found. Falling back to WAN."
        ubus call luci.routekeeper set_default_gateway '{"interface":"wan"}'
        return
    fi

    best_if=""
    best_latency_ms=999999

    for iface in $interfaces; do
        logger -t routekeeper "Testing $iface with curl to $TEST_URL..."

        latency=$(curl -o /dev/null -s -w "%{time_total}\n" \
            --interface "$iface" \
            --connect-timeout 2 \
            --max-time 2 \
            "$TEST_URL")

        if echo "$latency" | grep -Eq '^[0-9]+\.[0-9]+$'; then
            latency_ms=$(awk "BEGIN {printf \"%d\", $latency * 1000}")
            logger -t routekeeper "  $iface latency: ${latency_ms} ms"
            if [ "$latency_ms" -lt "$best_latency_ms" ]; then
                best_latency_ms=$latency_ms
                best_if=$iface
            fi
        else
            logger -t routekeeper "  $iface failed curl test"
        fi
    done

    if [ -n "$best_if" ]; then
        logger -t routekeeper "Best interface: $best_if (${best_latency_ms} ms)"
        ubus call luci.routekeeper set_default_gateway "{\"interface\":\"$best_if\"}"
    else
        logger -t routekeeper "No successful curl responses. Falling back to WAN."
        ubus call luci.routekeeper set_default_gateway '{"interface":"wan"}'
    fi
}

# ------------------------------------------------------------------------------------------------
# Start: launch RPCD handler and run gateway selector
# ------------------------------------------------------------------------------------------------
start_service() {
    logger -t routekeeper "Starting RouteKeeper..."

    procd_open_instance
    procd_set_param command lua "$PROG"
    procd_set_param stdout 1
    procd_set_param stderr 1
    procd_set_param respawn
    procd_close_instance

    # Perform initial gateway selection
    (
        sleep 2
        select_best_gateway
    ) &
}

# ------------------------------------------------------------------------------------------------
# Stop
# ------------------------------------------------------------------------------------------------
stop_service() {
    logger -t routekeeper "Stopping RouteKeeper..."
}

# ------------------------------------------------------------------------------------------------
# Status: report current selected interface
# ------------------------------------------------------------------------------------------------
status_service() {
    local current_gw
    current_gw=$(ubus call luci.routekeeper find_active_default_if 2>/dev/null | jsonfilter -e "@.interface")
    if [ -n "$current_gw" ]; then
        echo "Current default interface: $current_gw"
    else
        echo "No active default interface set or ubus call failed."
    fi
}
